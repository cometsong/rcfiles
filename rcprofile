#!/usr/bin/env bash
# ---------------------------------------------------------------------------- #
#                      shell profile of Cometsong rcfiles                      #
#    (This file is sourced by .bashrc and by .zshrc in interactive sessions.)  #
# ---------------------------------------------------------------------------- #

##### load RCPATH env var #####
source ${HOME}/.rcpath_env

##### Operating Situations #####
case $OSTYPE in darwin*) export OSX=1 ;; linux*) export LNX=1 ;; *) export OSUNK=1 ;; esac

export XDG_CONFIG_HOME="$HOME/.config"

##### Brews, etc... #####
if [[ -n $OSX ]]; then

  # if /usr/local not writable...
  if [ -d "$HOME/local/homebrew/bin" ]; then
    PATH="$HOME/local/homebrew/bin:$PATH"
  fi

  if type brew &>/dev/null; then
      BREW_PREFIX="$(brew --prefix)"
      _brew_opts=[]
      _brew_mans=[]
      # add paths for brew apps bottled poured to opt
      _brew_opts+=" opt/sqlite3/bin"
      _brew_mans+=" opt/sqlite3/share/man"
      _brew_opts+=" opt/go/libexec/bin"
      _brew_mans+=" opt/go/share/man"
      _brew_opts+=" opt/gnu-getopt/bin"
      _brew_mans+=" opt/gnu-getopt/share/man"
      _brew_opts+=" opt/coreutils/libexec/gnubin"
      _brew_mans+=" opt/coreutils/libexec/gnuman"
      _brew_opts+=" opt/python@3.10/bin"
      _brew_opts+=" opt/ruby3/bin"
      _brew_opts+=" opt/php@7.4/bin"
      _brew_opts+=" opt/php@7.4/sbin"

      for _path in ${_brew_opts[@]}; do
        if [ -d ${BREW_PREFIX}/${_path} ]; then
          PATH="${BREW_PREFIX}/${_path}:$PATH";
        fi
      done
      for _man in ${_brew_mans[@]}; do
        if [ -d ${BREW_PREFIX}/${_man} ]; then
          MANPATH="${BREW_PREFIX}/${_man}:$MANPATH";
        fi
      done
      unset _brew_opts_brew_mans _path _man

      [ ! -r ${XDG_CONFIG_HOME}/fzf/fzf.bash ] \
        && ${BREW_PREFIX}/opt/fzf/install --xdg --key-bindings --completion \
        --no-update-rc --xdg --key-bindings --completion --no-update-rc > /dev/null
  fi
fi

# for tput to complain less
export TERM=xterm
[[ "$TERMCAP" =~ "screen"  ]] && export TERM="xterm-256color"

##### multi-dotfile setup #####
if [[ $- == *i* ]]; then 
    source $RCPATH/colors          # load color vars
    source $RCPATH/man_colors      # load man_colors
fi
source $RCPATH/aliases         # load aliases
source $RCPATH/sh_functions    # load sh functions

##### Config Vars #####
export TZ="America/New_York"
export HISTCONTROL=ignoredups:erasedups:ignorespaces
export HISTFILE=$(hist_uname)
export HISTSIZE=999999999
export SAVEHIST=$HISTSIZE
export PAGER='less'
export HOSTNAME=$(uname -n)
export EDITOR=vim
umask 022

##### LANGUAGE #####
export LANG='en_US.UTF-8'
export LC_ALL=$LANG
export LC_CTYPE=$LANG

##### LESS is more #####
export LESS="-SKiM"
if [[ -x $(command -v pygmentize) ]]; then
  export LESS="-SKiRM"
  export LESSOPEN='|pygmentize -f terminal256 -g %s'
fi

##### bat the cat #####
if type bat &>/dev/null; then
  alias cat="bat"
fi

##### for finding things: fd + fzf #####
if type fzf &>/dev/null; then
  if [ -r "${XDG_CONFIG_HOME}/fzf" ] ; then
    _fzf_cfgs=(
      fzf.bash
      fzf-keybindings.bash
    )

    for _cfg in ${_fzf_cfgs[*]}; do
      [ -f ${XDG_CONFIG_HOME}/fzf/${_cfg} ] && source ${XDG_CONFIG_HOME}/fzf/${_cfg}
    done
  fi
  unset _fzf_cfgs _cfg

  if type fd &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git --follow --color=auto --full-path'
  fi
  export FZF_DEFAULT_OPTS="\
    --inline-info \
    --height=40% \
    --ansi \
    --multi \
    --cycle \
    --border \
    --history=${HOME}/.fzf.history \
    --preview='bat -f {+}' \
    --marker='>>'"
fi

##### Go #####
if type go &>/dev/null; then
  GOPATH=~/code/go && PATH=${GOPATH}/bin/:$PATH
fi

##### java #####
if type java_home &>/dev/null; then
    JAVA_HOME=$(command java_home -v 1.7)
fi

##### Python #####
export PYTHONSTARTUP=$HOME/.pythonrc.py
export PYTHONUSERBASE=$HOME/local/

##### prepend $PATH with $HOME bins
PATH="$HOME/bin:$HOME/local/bin:$HOME/.vim/bin:/usr/local/bin:/usr/local/sbin:$PATH"
# parse $PATH, remove duplicate entries, then remove trailing ORS and \n
PATH=$(echo $PATH | awk 'BEGIN{RS=ORS=":"}{ if (a[$0] == 0){ a[$0] += 1; print $0}}' | awk '{sub(/:$/,"");print}' | tr -d '\n')

# Path shortcuts init (future mods in my_aliases for specific hosts)
[ -z "$CDPATH" ] && export CDPATH=".:~"

# if 'my' server-specific rc file exists, source it.
if [[ -e $RCPATH/my_aliases ]]; then source $RCPATH/my_aliases; fi

#  vim: set ft=sh ts=2 sw=0 tw=100 et fdm=indent:
