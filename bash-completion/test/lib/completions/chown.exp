proc setup {} {
    # fake root command to get all users/groups completed at least for now
    assert_bash_exec {root_command=sudo}
    save_env
}

proc teardown {} {
    assert_env_unmodified
}


setup


set users [exec bash -c "compgen -A user"]
assert_complete $users "chown "


sync_after_int


# Find user/group suitable for testing.
set failed_find_unique_completion 0
foreach ug {user group} {
    # compgen -A is used because it's a bash builtin and available everywhere.
    # The || true part prevents exec from throwing an exception if nothing is
    # found (very very unlikely).
    set list [split [exec bash -c "compgen -A $ug || true"] "\n"]
    if {![find_unique_completion_pair $list part$ug full$ug]} {
        untested "Not running complex chown tests; no suitable test $ug found."
        set failed_find_unique_completion 1
    }
}

# These tests require an unique completion.
if {!$failed_find_unique_completion} {
    assert_complete $fulluser "chown $partuser"
    sync_after_int

    assert_complete $fulluser:$fullgroup "chown $fulluser:$partgroup"
    sync_after_int

    assert_complete "dot.user:$fullgroup" "chown dot.user:$partgroup"
    sync_after_int

    foreach prefix {
        "funky\\ user:" "funky.user:" "funky\\.user:" "fu\\ nky.user:"
        "f\\ o\\ o\\.\\bar:" "foo\\_b\\ a\\.r\\ :"
    } {
        set test "Check preserve special chars in $prefix$partgroup<TAB>"
        #assert_complete_into "chown $prefix$partgroup" "chown $prefix$fullgroup " $test
        assert_complete $prefix$fullgroup "chown $prefix$partgroup" $test
        sync_after_int
    }

    # Check that we give up in degenerate cases instead of spewing various junk.

    assert_no_complete "chown $fulluser\\\\:$partgroup"
    sync_after_int

    assert_no_complete "chown $fulluser\\\\\\:$partgroup"
    sync_after_int

    assert_no_complete "chown $fulluser\\\\\\\\:$partgroup"
    sync_after_int

    # Colons in user/groupnames are not usually allowed.
    assert_no_complete "chown foo:bar:$partgroup"
    sync_after_int
}

assert_complete {bar "bar bar.d/" foo foo.d/} "chown foo: $::srcdir/fixtures/shared/default/"
sync_after_int

assert_complete {bar "bar bar.d/" foo foo.d/} "chown :foo $::srcdir/fixtures/shared/default/"
sync_after_int


teardown
