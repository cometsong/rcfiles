proc setup {} {
    save_env
}


proc teardown {} {
    assert_env_unmodified {/OLDPWD=/d}
}


setup


assert_complete_any "find "


sync_after_int


assert_complete_any "find -fstype "


sync_after_int


set options [list -daystart -depth -follow -help \
        -ignore_readdir_race -maxdepth -mindepth -mindepth -mount \
        -noignore_readdir_race -noleaf -regextype -version -warn -nowarn \
        -xdev \
        -amin -anewer -atime -cmin -cnewer -ctime -empty -executable -false \
        -fstype -gid -group -ilname -iname -inum -ipath -iregex -iwholename \
        -links -lname -mmin -mtime -name -newer -nogroup -nouser -path -perm \
        -readable -regex -samefile -size -true -type -uid -used -user \
        -wholename -writable -xtype -context \
        -delete -exec -execdir -fls -fprint -fprint0 -fprintf -ls -ok -okdir \
        -print -print0 -printf -prune -quit]
assert_complete $options {find -}


sync_after_int


set test "-wholename should complete files/dirs"
set dir $::srcdir/fixtures/shared/default
set files [split [exec bash -c "cd $dir && ls -p"] "\n"]
assert_complete_dir $files "find -wholename " $dir $test


sync_after_int


set test "-uid should complete uids"
set cmd "find -uid "
send "$cmd\t"
expect {
    -re "$cmd\r\n\\d+.*/@$cmd$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


set test "-gid should complete gids"
set cmd "find -gid "
send "$cmd\t"
expect {
    -re "$cmd\r\n\\d+.*/@$cmd$" { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    -re eof { unresolved "eof" }
}


sync_after_int


teardown
