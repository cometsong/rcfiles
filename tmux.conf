#------------------------------------------------------------------------------#
#                          cometsong rcfiles tmux.conf                         #
#------------------------------------------------------------------------------#

#--------------------------------------------  General  -----
#  Global prefix:
#unbind C-h
#set -g prefix C-h
#unbind C-b
set -g prefix C-b
bind C-b send-prefix

bind -N "rename window" A command-prompt "rename-window %%"
bind -N "detach client" d detach-client

# Press F3 for the complete list of hot-keys (press 'q' to return).
bind -n F3 new-window  "tmux list-keys | less" \; rename-window "list-keys"
bind -n F4 "list-keys -aN"

bind -N "Re-source tmux.conf during session"	C-t { source-file ~/.tmux.conf; display 'Reloaded tmux config.' }

# do not clear screen on exit
setw -g alternate-screen on

# default is too slow during heavy-use of the copy buffer
set -s escape-time 100

bind -N "toggle window activity/silence monitoring"  m setw monitor-activity
bind -N "prompt for window monitor-silence seconds"  M command-prompt -p "monitor-silence (seconds)" "setw monitor-silence %%"

# loooong scrollback history limit (5000000)
set -g history-limit 5000000
set -g terminal-overrides "xterm*:smcup@:rmcup@"

# term keys, colors, prettiness
setw -g xterm-keys on
set -g default-terminal "screen-256color"

# vi keymodes galore!
setw -g mode-keys vi
set  -g status-keys vi

# make me new
#bind l refresh-client

#----------------------------------------------- Statusbar -----
set -g status-bg colour236
set -g status-fg colour11
set -g status-left '#[fg=green][#{host_short}]#[fg=green]      '
set -g status-right '#[fg=colour18,bg=colour7,none] F3=list-keys F4=describe-keys #[fg=colour18,bg=colour8] %Y-%d-%m #[fg=colour18,bg=colour8] %H:%M:%S '
set -g status-position bottom
set -g status-justify left
set -g status-interval 2
set -g status-right-length 90
set -g status-left-length 20

# window status
setw -g window-status-format "#I#[fg=colour10]:#[fg=#{status-fg}]#W"
setw -g window-status-current-format "#[fg=colour10](#I:#[fg=colour14,bold]#W#[fg=colour10,none])"

#-----------------------------------------------  Display  -----
# start window/pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1
# renumber windows when a window is closed
set -g renumber-windows on

#--------------------------------------------  Mouse Mode  -----
set -g mouse on
bind -N "toggles mouse text selection for pane-selection/buffer scrollback"  Enter { set -g mouse; display 'Mouse toggled!'; }

#-------------------------------------------  Mode-Tables  -----
setw -g clock-mode-colour colour135

#--------------------------------------  List Choice Mode  -----
#bind -t vi-choice h tree-collapse
#bind -t vi-choice l tree-expand
#run 'tmux bind -t vi-choice K start-of-list 2> /dev/null'
#run 'tmux bind -t vi-choice J end-of-list 2> /dev/null'
#bind -t vi-choice H tree-collapse-all
#bind -t vi-choice L tree-expand-all
#bind -t vi-choice Escape cancel

#---------------------------------------------  Edit Mode  -----
#bind -ct vi-edit ^ start-of-line
#bind -ct vi-edit q cancel
#bind -ct vi-edit Escape cancel

#---------------------------------------------  Copy Mode  -----
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
#bind -t vi-copy C-v rectangle-toggle
#bind -t vi-copy ^ start-of-line
#bind -t vi-copy Escape cancel

#-----------------------------------------------  Buffers  -----
bind b list-buffers    # list paste-buffers
bind P paste-buffer    # paste from the top paste buffer
bind C-P choose-buffer # choose which buffer to paste from

bind > command-prompt "save-buffer -b %1 $HOME/tmp/screen-exchange"
bind < command-prompt "load-buffer -b %1 $HOME/tmp/screen-exchange"
bind _ command-prompt "delete-buffer -b %1"

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
set-window-option -g monitor-activity off

set -g pane-active-border-style "bright,bold"

set -g display-panes-time 800 # longer pane indicators display time
set -g display-time 1000      # longer status messages display time

set -g set-titles on   # set xterm window status

# size it how we want it
set -g aggressive-resize on

#------------------------------------------ Windows, Panes -----
unbind &
bind K confirm-before kill-window
bind R confirm-before -p "restart pane (kill command)?" "respawn-pane -k"

##?>  |     Split a window into vertical panes
bind | split-window -h   # default: "
##?>  -     Split a window into horizontal panes
unbind %
bind - split-window      # default: %

##?>  r     Rotate panes to next layout
bind r   next-layout
bind E   select-layout -E
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

bind -N 'Rotate panes in current window forwards.' C-o rotate-window
bind x swap-pane -D


#--------------------------------------------  Navigation  -----
bind-key -N 'Focus on next pane down'  j select-pane -D
bind-key -N 'Focus on next pane up'    k select-pane -U
bind-key -N 'Focus on next pane left'  h select-pane -L
bind-key -N 'Focus on next pane right' l select-pane -R

bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-h resize-pane -L 5
bind C-l resize-pane -R 5

bind '"' choose-window
bind BSpace last-window
#bind  last-window # C-6 cf. C-^ in vim
#bind -n C-6 last-window # C-6 cf. C-^ in vim
#bind -n ^ last-window # C-6 cf. C-^ in vim

bind-key -N 'Swap windows to the left' 'C-S-Left' swap-window -t -1
bind-key -N 'Swap windows to the Right' 'C-S-Right' swap-window -t +1

bind '!' break-pane -t :    # break pane to its own window
#bind 'C-!' join-pane -t -v !  # join pane to latest used window
bind '@' command-prompt -p "join pane vert  to (put window-number[.pane-number]): " "join-pane -ht ':%%'"
bind '#' command-prompt -p "join pane horiz to (put window-number[.pane-number]): " "join-pane -vt ':%%'"

#---------------------------------------------- Plugged In! -----
set -g @plugin 'tmux-plugins/tpm'                     # Tmux Plugin Manager
#set -g @plugin 'tmux-plugins/tmux-cpu'                # show cpu percentage on status line
#set -g @plugin 'tmux-plugins/tmux-copycat'            # enhanced searching (e.g. regex)
set -g @plugin 'tmux-plugins/tmux-yank'               # Copy to the system clipboard in tmux.
set -g @plugin 'tmux-plugins/tmux-sensible'           # A set of tmux options that should be acceptable to everyone.

set -g @plugin 'tmux-plugins/tmux-resurrect'          # Save and Restore tmux environment (e.g. after system restart)
set -g @resurrect-dir '~/.tmux/resurrect/$HOSTNAME/'  # mod save_dir to be host-specific
set -g @resurrect-capture-pane-contents 'on'          # store panes' details
set -g @resurrect-save 'S'                            # save
set -g @resurrect-restore 'R'                         # restore
# Only a conservative list of programs is restored by default: vi vim nvim emacs man less more tail top htop irssi weechat mutt
set -g @resurrect-processes 'ssh psql sqlite3'        # add-on apps to be reloaded on resurrection
set -g @resurrect-processes '~vimw'                   # testing this for restoring vim ctrlspace workspaces
set -g @resurrect-processes '~Vim -> vim'             # ~Vim matches MacVim

set -g @plugin 'tmux-plugins/tmux-continuum'          # continuous saving of tmux environment
set -g @continuum-restore 'off'                       # on = Last saved is automatically restored
set -g @continuum-save-interval '60'                  # save interval 'num' minutes


#---------------------------------------------------- Run the Plug Manager -----
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

